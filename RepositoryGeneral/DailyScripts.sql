SELECT top 100*
FROM MARKETS.FACT_TRADING WITH(NOLOCK)

SELECT MAX(ID_DATE)
FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)


SELECT *,REPLACE(DATE,'-','')
FROM DATES_TO_IMPORT
WHERE ACTIVE = 1
ORDER BY DATE


TRUNCATE TABLE DATES_TO_IMPORT
UPDATE DATES_TO_IMPORT 
SET ACTIVE = 0 
WHERE [DATE] = '2021-06-23'

-- Insertion of new date for extracting the data of these new day
TRUNCATE TABLE DATES_TO_IMPORT;
INSERT INTO DATES_TO_IMPORT(DATE,ACTIVE)
VALUES 
			('2023-03-24',1)
-----------------------------------------------------------------------------------------------------------------------------
-- Obtaining the inserted date
-----------------------------------------------------------------------------------------------------------------------------
DECLARE @DAY NVARCHAR(10)
SET @DAY = (
			SELECT REPLACE(MIN(DATE),'-','')
			FROM DATES_TO_IMPORT
			WHERE ACTIVE = 1
			)
-- Insertion the data from TEMP_DAILY_BARS to the schema model with the date fields
INSERT INTO MARKETS.TEMP_DAILY_BARS (BI_INS_DATE,ID_DATE,TICKER,VOLUME,OPEN_PRICE,CLOSE_PRICE,HIGH_PRICE,LOW_PRICE)
SELECT GETDATE() BI_INS_DATE, @DAY ID_DATE,TICKER,VOLUME,OPEN_PRICE,CLOSE_PRICE,HIGH_PRICE,LOW_PRICE
FROM TEMP_DAILY_BARS
-- Updating the last date with price date
UPDATE DATES_TO_IMPORT 
SET ACTIVE = 0 
WHERE [DATE] = (
				SELECT MIN(DATE)
				FROM DATES_TO_IMPORT
				WHERE ACTIVE = 1
				)
--///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


SELECT *
FROM DATES_TO_IMPORT 
WHERE ACTIVE = 1 AND DATE LIKE '%2022%'
ORDER BY [DATE] DESC

DELETE FROM MARKETS.TEMP_DAILY_BARS
WHERE ID_DATE = 20230105

SELECT *
FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
WHERE TICKER = 'AAPL'
ORDER BY ID_DATE DESC

SELECT *
FROM MARKETS.TEMP_DAILY_BARS
WHERE ID_DATE NOT IN(
					20221118,
					20220901,
					20220805,
					20220715,
					20220603,
					20220513,
					20220422,
					20220301,
					20220211,
					20211231,
					20210601,
					20201231,
					20220913
					)

SELECT TICKER, MIN(CLOSE_PRICE) MINIMUM_PRICE
FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
GROUP BY TICKER


-- Calculate the minimum value and its respective date
WITH CTE_MINIMUM AS
(
   SELECT ID_DATE,TICKER,CLOSE_PRICE,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY CLOSE_PRICE ASC) AS rn
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
)
SELECT ID_DATE,TICKER,CLOSE_PRICE
FROM CTE_MINIMUM
WHERE rn = 1
ORDER BY TICKER;
-- Calculate the maximum value and its respective date
WITH CTE_MAXIMUM AS
(
   SELECT ID_DATE,TICKER,CLOSE_PRICE,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY CLOSE_PRICE DESC) AS rn
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
)
SELECT ID_DATE,TICKER,CLOSE_PRICE
FROM CTE_MAXIMUM
WHERE rn = 1
ORDER BY TICKER;
-- Obtain the values of last trading day
WITH CTE_LAST_DAY AS
(
   SELECT ID_DATE,TICKER,CLOSE_PRICE,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY ID_DATE DESC) AS rn
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
)
SELECT ID_DATE,TICKER,CLOSE_PRICE
FROM CTE_LAST_DAY
WHERE rn = 1
ORDER BY TICKER;
-- Prepare the data for loading the factual table
TRUNCATE TABLE MARKETS.FACT_TRADING
INSERT INTO MARKETS.FACT_TRADING(BI_LAST_UPD_DATE,COD_TICKER,SK_YEAR_DATE_MINIMUM,MTR_YEAR_MINIMUM,SK_YEAR_DATE_MAXIMUM,MTR_YEAR_MAXIMUM,MTR_LAST_OPEN,MTR_LAST_LOW,MTR_LAST_HIGH,MTR_LAST_CLOSE,MTR_LAST_VOLUME)
SELECT
GETDATE() AS BI_LAST_UPD_DATE, 
DS.TICKER,
ISNULL(SUB_QRY_MINIMUM.ID_DATE,0) SK_YEAR_DATE_MINIMUM,
ISNULL(SUB_QRY_MINIMUM.CLOSE_PRICE,0) MTR_YEAR_MINIMUM,
ISNULL(SUB_QRY_MAXIMUM.ID_DATE,0) SK_YEAR_DATE_MAXIMUM,
ISNULL(SUB_QRY_MAXIMUM.CLOSE_PRICE,0) MTR_YEAR_MAXIMUM,
ISNULL(SUB_QRY_LAST_DAY.OPEN_PRICE,0) MTR_LAST_OPEN,
ISNULL(SUB_QRY_LAST_DAY.LOW_PRICE,0) MTR_LAST_LOW,
ISNULL(SUB_QRY_LAST_DAY.HIGH_PRICE,0) MTR_LAST_HIGH,
ISNULL(SUB_QRY_LAST_DAY.CLOSE_PRICE,0) MTR_LAST_CLOSE,
ISNULL(SUB_QRY_LAST_DAY.VOLUME,0) MTR_LAST_VOLUME
FROM VW_STOCKS_ACTIVE DS WITH(NOLOCK)
-- minimum value and its date
LEFT JOIN 
(
   SELECT ID_DATE,TICKER,CLOSE_PRICE,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY CLOSE_PRICE ASC) AS RN
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
   WHERE ID_DATE >= 20220101
) SUB_QRY_MINIMUM
    ON DS.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS = SUB_QRY_MINIMUM.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS
    -- maximum value and its date
LEFT JOIN 
(
   SELECT ID_DATE,TICKER,CLOSE_PRICE,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY CLOSE_PRICE DESC) AS RN
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
   WHERE ID_DATE >= 20220101
) SUB_QRY_MAXIMUM
    ON DS.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS = SUB_QRY_MAXIMUM.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS
-- last trading day
LEFT JOIN 
(
   SELECT ID_DATE,TICKER,OPEN_PRICE,LOW_PRICE,HIGH_PRICE,CLOSE_PRICE,VOLUME,
         ROW_NUMBER() OVER (PARTITION BY TICKER ORDER BY ID_DATE DESC) AS RN
   FROM MARKETS.TEMP_DAILY_BARS WITH(NOLOCK)
   WHERE ID_DATE >= 20220101
) SUB_QRY_LAST_DAY
    ON DS.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS = SUB_QRY_LAST_DAY.TICKER COLLATE SQL_Latin1_General_CP1_CI_AS
WHERE SUB_QRY_MINIMUM.RN = 1 AND SUB_QRY_MAXIMUM.RN = 1 AND SUB_QRY_LAST_DAY.RN = 1
--Validate the factual table
SELECT *
,DATEDIFF(D,dbo.FxFormatDateFromINT(SK_YEAR_DATE_MINIMUM),GETDATE()) DAYS_TO_MINIMUM
,DATEDIFF(D,dbo.FxFormatDateFromINT(SK_YEAR_DATE_MAXIMUM),GETDATE()) DAYS_TO_MAXIMUM
,MTR_LAST_CLOSE/MTR_YEAR_MAXIMUM
FROM MARKETS.FACT_TRADING WITH(NOLOCK)
WHERE DATEDIFF(D,dbo.FxFormatDateFromINT(SK_YEAR_DATE_MINIMUM),GETDATE()) < 5
	AND MTR_LAST_CLOSE > 1
	AND MTR_LAST_VOLUME > 1000000
	AND MTR_LAST_CLOSE/MTR_YEAR_MAXIMUM > 0.20
ORDER BY 13 ASC, MTR_LAST_CLOSE/MTR_YEAR_MAXIMUM ASC
-- Stocks that are rising











SELECT CAST(LEFT('20220715',4) AS INT), CAST(RIGHT(LEFT('20220715',6),2) AS INT), CAST(RIGHT('20220715',2) AS INT), GETDATE()
, CONCAT(LEFT('20220715',4), '-', CAST(RIGHT(LEFT('20220715',6),2) AS INT), '-', CAST(RIGHT('20220715',2) AS INT))



-- Number of minimums by month
SELECT SK_YEAR_DATE_MINIMUM,
COUNT(*)NUM_MIN
FROM MARKETS.FACT_TRADING WITH(NOLOCK)
GROUP BY SK_YEAR_DATE_MINIMUM
ORDER BY SK_YEAR_DATE_MINIMUM
-- Number of mximums by month
SELECT SK_YEAR_DATE_MAXIMUM,
COUNT(*)NUM_MIN
FROM MARKETS.FACT_TRADING WITH(NOLOCK)
GROUP BY SK_YEAR_DATE_MAXIMUM
ORDER BY SK_YEAR_DATE_MAXIMUM
-- Stocks in minimum values
SELECT *,
MTR_YEAR_MINIMUM/MTR_YEAR_MAXIMUM -1 DELTA_MAX_MIN
FROM MARKETS.FACT_TRADING WITH(NOLOCK)
WHERE SK_YEAR_DATE_MINIMUM = 20210430
ORDER BY MTR_YEAR_MINIMUM/MTR_YEAR_MAXIMUM  ASC

SELECT TOP 10 *
FROM MARKETS.FACT_TRADING WITH(NOLOCK)

SELECT * FROM DIM_STOCKS_DEGIRO (NOLOCK)
--WHERE PK_STOCK = 42
WHERE DATE_UPDATED IS NOT NULL --AND TICKER = SYMBOL_DEGIRO
ORDER BY TICKER

--UPDATE DIM_STOCKS_DEGIRO
--SET DATE_UPDATED = GETDATE()
--,ID_UPDATED = 1
--WHERE PK_STOCK = 42


SELECT TOP 1 * FROM DIM_STOCKS_DEGIRO WHERE DATE_UPDATED IS NULL AND LEN(TICKER) <= 5 ORDER BY TICKER